default: &defaults
  # use preconfigured docker image (contains kubectl, kops, awscli)
  docker:
    - image: 'philophilo/awskube'
      environment:
        TestingConfig: 'TestingConfig'
        DATABASE_URL: 'postgresql://postgres@localhost/postgres?sslmode=disable'
    - image: 'circleci/postgres:9.6.5-alpine-ram'
      environment:
        POSTGRES_USER: circleci
        POSTGRES_DB: test_db
        POSTGRES_PASSWORD: ''
  working_directory: ~/project

# create circleci jobs
version: 2
jobs:
  # build the application and run tests
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run: mkdir test-reports
      - restore_cache:
          key: 'deps1-{{ .Branch }}-{{ checksum "yummy_api/requirements.txt" }}'
      - run:
          name: install requirements
          command: |
            # create virtual environment
            python3 -m venv venv
            . venv/bin/activate
            cd yummy_api/
            pip install -r requirements.txt
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd yummy_api/
            # run nosetests along with coverage
            nosetests --with-coverage --cover-package=app
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
  
  # deploy the application
  deploy:
    docker:
      - image: 'philophilo/awskube'
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: create image
          command: |
            # login to docker
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            # create image with docker compose
            docker-compose up -d
            # push image to dockerhub with docker compose
            docker-compose push
      - run:
          name: configure cluster
          command: |
            . kube.sh
      - run:
          name: Deploy
          command: |
            kops export kubecfg ${CLUSTER_NAME} --state=s3://${BUCKET_NAME}
            kubectl apply -f ~/project/deployment.yml
    working_directory: ~/project

# run circleci jobs in a workflow
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          # run deploy job after build job
          requires:
            - build
          filters:
            # run the deploy job only on master
            branches:
              only: master
